---
const themes = ['light', 'dark', 'red', 'blue', 'green', 'purple'];
const lottieFiles = ['https://fonts.gstatic.com/s/e/notoemoji/latest/1f916/lottie.json','https://fonts.gstatic.com/s/e/notoemoji/latest/1f47d/lottie.json', 'https://fonts.gstatic.com/s/e/notoemoji/latest/1f680/lottie.json','https://fonts.gstatic.com/s/e/notoemoji/latest/1f976/lottie.json', 'https://fonts.gstatic.com/s/e/notoemoji/latest/1f995/lottie.json', 'https://fonts.gstatic.com/s/e/notoemoji/latest/1f608/lottie.json']
---
<div>
    {themes.map((theme, index) => (
        <button class="theme-button" data-theme={theme} aria-label="Theme Selecter" title=`${theme.charAt(0).toUpperCase() + theme.slice(1)} Theme` >
            <script is:inline src="https://unpkg.com/@dotlottie/player-component@latest/dist/dotlottie-player.mjs" type="module"></script><dotlottie-player src={lottieFiles[index]} background="transparent" speed="1" style="width: 50px; height: 50px" direction="1" playMode="normal" hover loop></dotlottie-player>
        </button>
      ))}
</div>

<style>
    div {
       display: flex;
       flex-direction: column;
       gap: 2rem;
       position: absolute;
       left: 20px;
       z-index: 2;
    }

    .theme-button {
        transition: scale 0.2s ease;

        &:hover {
            scale: 1.2;
        }

        &:active {
            cursor: progress;
        }
    }
    .theme-button.active {
        cursor: not-allowed ;
        
    }
    .theme-button.active dotlottie-player {
        pointer-events: none;
        filter: grayscale(1); 
}

@media (max-width: 480px) {
    div {
        flex-direction: row;
        justify-content: center;
        align-items: center;
        width: 100%;
        top: 50px;
        left: 0;
        gap: .7rem;
    }

    dotlottie-player {
      width: 20px;
      height: 20px;
    }
}

</style>


<script>
    document.addEventListener('DOMContentLoaded', function () {
  const theme = localStorage.getItem('theme') || 'light';
  document.documentElement.setAttribute('data-theme', theme);
  
  const themeButtons = document.querySelectorAll('.theme-button');
  themeButtons.forEach(button => {
    if (button.getAttribute('data-theme') === theme) {
      button.classList.add('active');
    }

    button.addEventListener('click', () => {
      const selectedTheme = button.getAttribute('data-theme');
      if(selectedTheme) {
        //@ts-expect-error
        document.startViewTransition(() => {
            document.documentElement.setAttribute('data-theme', selectedTheme);
            localStorage.setItem('theme', selectedTheme);
        });
          
          // Remover la clase 'active' de los demÃ¡s botones
          themeButtons.forEach(btn => btn.classList.remove('active'));
          button.classList.add('active');
        }
    });
  });
});
</script>